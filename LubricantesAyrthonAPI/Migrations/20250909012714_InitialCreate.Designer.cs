// <auto-generated />
using System;
using LubricantesAyrthonAPI.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LubricantesAyrthonAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250909012714_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LubricantesAyrthonAPI.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("LubricantesAyrthonAPI.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.Property<int>("stock")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("LubricantesAyrthonAPI.Models.Sale", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("idCustomer")
                        .HasColumnType("integer");

                    b.Property<int>("idSeller")
                        .HasColumnType("integer");

                    b.Property<DateTime>("saleDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("totalPrice")
                        .HasColumnType("numeric");

                    b.HasKey("id");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("LubricantesAyrthonAPI.Models.SaleDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Saleid")
                        .HasColumnType("integer");

                    b.Property<int>("idProduct")
                        .HasColumnType("integer");

                    b.Property<int>("idSale")
                        .HasColumnType("integer");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Saleid");

                    b.ToTable("SaleDetail");
                });

            modelBuilder.Entity("LubricantesAyrthonAPI.Models.SaleDetail", b =>
                {
                    b.HasOne("LubricantesAyrthonAPI.Models.Sale", null)
                        .WithMany("saleDetails")
                        .HasForeignKey("Saleid");
                });

            modelBuilder.Entity("LubricantesAyrthonAPI.Models.Sale", b =>
                {
                    b.Navigation("saleDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
